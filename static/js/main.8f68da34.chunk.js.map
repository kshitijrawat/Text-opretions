{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","placeholder","onClick","changeColor","name","htmlFor","toggleMode","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","_useState3","_useState4","find","setFind","_useState5","_useState6","replace","setReplace","Fragment","heading","value","rows","style","backgroundColor","onChange","event","target","btnColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","message","defaultProps","App","setMode","setBtnColor","setAlert","msg","setTimeout","body","put","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8f68da34.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    // const changeColor =(event)=>{\r\n    //     let c=event.target.value;\r\n    //     props.changeColor(c);\r\n    // }\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Form</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    {/* checkbox */}\r\n                    {/* <div className={`d-flex text-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}>\r\n                        <label htmlFor=\"favcolor\">Color picker:</label>\r\n                        <input type=\"color\" id=\"favcolor\" name=\"favcolor\" onChange={changeColor}value=\"#444444\" className='mx-2'/> */}\r\n                            <div className={`form-check mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={()=>props.changeColor('#08510f')} type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault1\">\r\n                                green\r\n                            </label>\r\n                        </div>\r\n                        <div className={`form-check mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" type=\"radio\" onClick={()=>props.changeColor('#6b061d')} name=\"flexRadioDefault\" id=\"flexRadioDefault2\"  />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault2\">\r\n                                red\r\n                            </label>\r\n                        </div>\r\n                        <div className={`form-check mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={()=>props.changeColor('#070958')} type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault3\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault3\">\r\n                                blue\r\n                            </label>\r\n                        </div>\r\n                        <div className={`form-check mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={()=>props.changeColor('#77790b')} type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault4\"  />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexRadioDefault4\">\r\n                                yellow\r\n                            </label>\r\n                    </div>\r\n                {/* </div> */}\r\n                <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'} mx-2`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">enable dark mode</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </nav >\r\n    )\r\n}\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    aboutText: 'set about here'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n    const [find, setFind] = useState(\"\");\r\n    const [replace, setReplace] = useState(\"\");\r\n    const handelOnFind=(event)=>{\r\n        setFind(event.target.value);\r\n    }\r\n    const handelOnReplace =(event)=>{\r\n        setReplace(event.target.value);\r\n    }\r\n    const handelReplaceClick=()=>{\r\n        let newText=text.replace(find,replace);\r\n        setText(newText);\r\n        props.showAlert(\"the word is replace\",\"success\");\r\n\r\n    }\r\n    const handelUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"the word is is uppercase\",\"success\");\r\n\r\n    }\r\n    const handelDownClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"the word is in lowercase\",\"success\");\r\n\r\n    }\r\n    const handelOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    const handelCopy =()=>{\r\n        let text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"the word is copies in the clipboard\",\"success\");\r\n\r\n    }\r\n    const handelExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"the extra spaces in the the text is removed\",\"success\");\r\n\r\n    }\r\n    return (\r\n        <><div>\r\n            <div className=\"mb-3\" >\r\n                <h1 className={`text-${props.mode === 'light' ? 'dark':'light'}`}>{props.heading}</h1>\r\n                <textarea className=\"form-control\" value={text} id=\"myBox\" rows=\"10\" style={{backgroundColor : props.mode === 'light' ? 'white':'grey'}} onChange={handelOnChange} placeholder=\" enter \"></textarea >\r\n            </div>\r\n            <button className={`btn btn-${props.btnColor} mx-2 my-2`} onClick={handelUpClick}>Upper</button>\r\n            <button className={`btn btn-${props.btnColor} mx-2 my-2`} onClick={handelDownClick}>Lower</button>\r\n            <button className={`btn btn-${props.btnColor} mx-2 my-2`} onClick={handelCopy}>Copy Text</button>\r\n            <button className={`btn btn-${props.btnColor} mx-2 my-2`} onClick={handelExtraSpace}>Remove Extra space</button><br/>\r\n            \r\n        </div>\r\n            <div className='container my-3'>\r\n                <h1  className={`text-${props.mode === 'light' ? 'dark':'light'}`}>your text summary here </h1>\r\n                <p  className={`text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n                    lenght of your text is {text.length} .\r\n                </p>\r\n                <p  className={`text-${props.mode === 'light' ? 'dark':'light'}`}> \r\n                    no. of word is your text is {text.split(\" \").length}\r\n                </p>\r\n                <p  className={`text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n                    it will take {text.split(\" \").length * 0.008} minutes to read this text\r\n                </p>\r\n                <h3  className={`text-${props.mode === 'light' ? 'dark':'light'}`}>Preview</h3>\r\n                <p  className={`text-${props.mode === 'light' ? 'dark':'light'}`}>{text}</p>\r\n            </div>\r\n            <div className='container my-3' >\r\n            <input className=\" mx-2 my-2\" type=\"text \" value={find} style={{backgroundColor : props.mode === 'light' ? 'white':'grey'}} onChange={handelOnFind} id=\"find\" placeholder='find'/>\r\n            <input className=\" mx-2 my-2\" type=\"text\" value={replace} style={{backgroundColor : props.mode === 'light' ? 'white':'grey'}} onChange={handelOnReplace} id=\"replace\" placeholder='replace'/><br/>\r\n            <button className={`btn btn-${props.btnColor} mx-2 my-2`} onClick={handelReplaceClick}>Replace</button><br/>\r\n            \r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n        {props.alert.message}\r\n      </div>\r\n    )\r\n}","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#444444\";\n      showAlert(\"dark mode has been enabled\", \"success\");\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"danger\");\n    }\n  }\n  const [btnColor, setBtnColor] = useState(\"primary\");\n  const changeColor = (put) => {\n    if (mode === \"dark\") {\n      if (put === '#77790b') setBtnColor('warning');\n      else if (put === '#6b061d') setBtnColor('danger');\n      else if (put === '#08510f') setBtnColor('success');\n      else if (put === '#070958') setBtnColor('primary');\n      document.body.style.backgroundColor = put;\n    }\n    else if (mode === 'light') {\n      setBtnColor('primary');\n    }\n  }\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (msg, type) => {\n    setAlert({\n      message: msg,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"BlueStack\" aboutText=\"About BlueStack\" mode={mode} toggleMode={toggleMode} changeColor={changeColor} />\n      <Alert alert={alert} />\n      <div className='container my-3'>\n        {/* <Routes>\n          <Route exact path=\"/about\" element= {<About/>}>\n          </Route> */}\n          {/* <Route exact path=\"/TextForm\" element={<TextForm showAlert={showAlert} heading=\"enter the text to analyse\" mode={mode} btnColor={btnColor} />}> */}\n          {/* </Route>\n        </Routes> */}\n        <TextForm showAlert={showAlert} heading=\"enter the text to analyse\" mode={mode} btnColor={btnColor} />\n      </div>\n      {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}